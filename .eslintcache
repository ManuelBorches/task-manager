[{"/home/manuel/Escritorio/task-manager/src/index.js":"1","/home/manuel/Escritorio/task-manager/src/redux/store.js":"2","/home/manuel/Escritorio/task-manager/src/redux/reducers/index.js":"3","/home/manuel/Escritorio/task-manager/src/containers/Main.jsx":"4","/home/manuel/Escritorio/task-manager/src/containers/CreateTaskContainer.jsx":"5","/home/manuel/Escritorio/task-manager/src/components/CreateTask.jsx":"6","/home/manuel/Escritorio/task-manager/src/containers/HeaderContainer.jsx":"7","/home/manuel/Escritorio/task-manager/src/components/Header.jsx":"8","/home/manuel/Escritorio/task-manager/src/redux/reducers/tasksReducer.js":"9","/home/manuel/Escritorio/task-manager/src/redux/constants.js":"10","/home/manuel/Escritorio/task-manager/src/hooks/useStatus.js":"11","/home/manuel/Escritorio/task-manager/src/redux/action-creators/tasksAction.js":"12","/home/manuel/Escritorio/task-manager/src/components/TasksList.jsx":"13","/home/manuel/Escritorio/task-manager/src/containers/TasksListContainer.jsx":"14"},{"size":286,"mtime":1607375312614,"results":"15","hashOfConfig":"16"},{"size":396,"mtime":1607374960455,"results":"17","hashOfConfig":"16"},{"size":142,"mtime":1607500163728,"results":"18","hashOfConfig":"16"},{"size":713,"mtime":1607520657465,"results":"19","hashOfConfig":"16"},{"size":1576,"mtime":1607540677660,"results":"20","hashOfConfig":"16"},{"size":2109,"mtime":1607530541894,"results":"21","hashOfConfig":"16"},{"size":735,"mtime":1607451993827,"results":"22","hashOfConfig":"16"},{"size":914,"mtime":1607516939985,"results":"23","hashOfConfig":"16"},{"size":1004,"mtime":1607443850670,"results":"24","hashOfConfig":"16"},{"size":176,"mtime":1607395234633,"results":"25","hashOfConfig":"16"},{"size":548,"mtime":1607364161065,"results":"26","hashOfConfig":"16"},{"size":396,"mtime":1607500147964,"results":"27","hashOfConfig":"16"},{"size":5973,"mtime":1607632457500,"results":"28","hashOfConfig":"16"},{"size":2066,"mtime":1607632427440,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"riudbr",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/manuel/Escritorio/task-manager/src/index.js",[],["61","62"],"/home/manuel/Escritorio/task-manager/src/redux/store.js",[],"/home/manuel/Escritorio/task-manager/src/redux/reducers/index.js",[],"/home/manuel/Escritorio/task-manager/src/containers/Main.jsx",["63","64"],"import React from \"react\";\nimport { Switch, Route, BrowserRouter } from \"react-router-dom\";\nimport HeaderContainer from \"../containers/HeaderContainer\";\nimport CreateTaskContainer from \"../containers/CreateTaskContainer\";\nimport TasksListContainer from \"../containers/TasksListContainer\";\nimport style from \"../assets/index.module.css\";\n\nexport default function Main() {\n  return (\n    <>\n      <BrowserRouter>\n        <div className={style.task_manager_container}>\n          <HeaderContainer />\n          <CreateTaskContainer />\n          <TasksListContainer />\n          {/* <Switch>\n            <Route exact path=\"/\" component={} />\n          </Switch> */}\n        </div>\n      </BrowserRouter>\n    </>\n  );\n}\n","/home/manuel/Escritorio/task-manager/src/containers/CreateTaskContainer.jsx",["65"],"import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport CreateTask from \"../components/CreateTask\";\nimport { addTask } from \"../redux/action-creators/tasksAction\";\nimport useStatus from \"../hooks/useStatus\";\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    addTask: (task) => dispatch(addTask(task)),\n  };\n};\n\nconst CreateTaskContainer = ({ addTask }) => {\n  const [status] = useStatus();\n  const [task, setTask] = useState({ name: \"\", status });\n  const [invalidLength, setInvalidLength] = useState(false);\n  const [taskName, setTaskName] = useState(\"\");\n  const [open, setOpen] = useState(false);\n\n  const handleChange = (event) => {\n    const value = event.target.value;\n    setInvalidLength(value.length > 10);\n    setTaskName(value);\n    setTask({ ...task, name: value });\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    if (!taskName || invalidLength) return;\n    addTask(task);\n    setTaskName(\"\");\n    setTask({ ...task, name: \"\" });\n    setInvalidLength(false);\n  };\n\n  const openSnackbar = () => {\n    if (invalidLength) setOpen(true);\n  };\n\n  const closeSnackbar = (event, reason) => {\n    if (reason === \"clickaway\" || !invalidLength) {\n      return;\n    }\n    setOpen(false);\n  };\n\n  return (\n    <CreateTask\n      handleChange={handleChange}\n      handleSubmit={handleSubmit}\n      invalidLength={invalidLength}\n      taskName={taskName}\n      openSnackbar={openSnackbar}\n      closeSnackbar={closeSnackbar}\n    />\n  );\n};\n\nexport default connect(null, mapDispatchToProps)(CreateTaskContainer);\n","/home/manuel/Escritorio/task-manager/src/components/CreateTask.jsx",[],"/home/manuel/Escritorio/task-manager/src/containers/HeaderContainer.jsx",[],"/home/manuel/Escritorio/task-manager/src/components/Header.jsx",[],"/home/manuel/Escritorio/task-manager/src/redux/reducers/tasksReducer.js",[],"/home/manuel/Escritorio/task-manager/src/redux/constants.js",[],"/home/manuel/Escritorio/task-manager/src/hooks/useStatus.js",[],"/home/manuel/Escritorio/task-manager/src/redux/action-creators/tasksAction.js",[],"/home/manuel/Escritorio/task-manager/src/components/TasksList.jsx",[],"/home/manuel/Escritorio/task-manager/src/containers/TasksListContainer.jsx",[],{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","severity":1,"message":"71","line":2,"column":10,"nodeType":"72","messageId":"73","endLine":2,"endColumn":16},{"ruleId":"70","severity":1,"message":"74","line":2,"column":18,"nodeType":"72","messageId":"73","endLine":2,"endColumn":23},{"ruleId":"70","severity":1,"message":"75","line":18,"column":10,"nodeType":"72","messageId":"73","endLine":18,"endColumn":14},"no-native-reassign",["76"],"no-negated-in-lhs",["77"],"no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar","'Route' is defined but never used.","'open' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]